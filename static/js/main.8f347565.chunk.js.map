{"version":3,"sources":["components/time.js","App.js","index.js"],"names":["dayMap","Map","Time","props","componentWillMount","console","log","componentDidMount","componentWillUpdate","componentDidUpdate","render","state","date","text_button","className","id","type","onClick","output","isRunning","clearInterval","interval","setState","setInterval","time","dateToString","Date","dayToString","getDay","necessaryAdd","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","day","get","number","bind","React","Component","App","ReactDOM","document","getElementById"],"mappings":"4QAIMA,EAAO,IAAIC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,SA+FtEC,E,kDA3Fd,WAAYC,GACX,IAAD,8BACC,cAAMA,IAYPC,mBAAmB,WAElBC,QAAQC,IAAI,uBAfb,EAkBAC,kBAAkB,WAEjBF,QAAQC,IAAI,sBApBb,EAuBAE,oBAAoB,WAEnBH,QAAQC,IAAI,wBAzBb,EA4BAG,mBAAmB,WAElBJ,QAAQC,IAAI,uBA9Bb,EAiCAI,OAAO,WACN,IAAD,EAC0B,EAAKC,MAAvBC,EADR,EACQA,KAAKC,EADb,EACaA,YAGZ,OAFAR,QAAQC,IAAI,QAAQM,GAGnB,qBAAKE,UAAU,OAAf,SACC,yBAAQA,UAAU,cAAlB,UACM,qBAAKC,GAAG,OAAR,SAAgBH,IAChB,wBAAQI,KAAK,SAASD,GAAG,SAASE,QAAS,EAAKC,OAAhD,SACEL,UA3CX,EAkDAK,OAAO,WAEF,EAAKP,MAAMQ,WAQdC,cAAc,EAAKC,UACnB,EAAKC,UAAS,SAAAX,GAAK,MACnB,CACCC,KAAK,sCACLC,YAAY,UACZM,WAAWR,EAAMQ,eAXlB,EAAKE,SAASE,aAAY,kBAAI,EAAKC,SAAO,MAtD5C,EAsEAA,KAAK,WAEJ,EAAKF,SACL,CACCV,KAAK,EAAKa,aAAa,IAAIC,MAC3Bb,YAAY,WACZM,WAAU,KA5EZ,EAgFAM,aAAa,SAAAb,GAAI,MAAE,gBAAgB,EAAKe,YAAYf,EAAKgB,UACxD,IAAI,EAAKC,aAAajB,EAAKkB,WAAW,IAAI,EAAKD,aAAajB,EAAKmB,YAAY,IAAInB,EAAKoB,cACrF,IAAI,EAAKH,aAAajB,EAAKqB,YAAY,IAAI,EAAKJ,aAAajB,EAAKsB,cAAc,IACjF,EAAKL,aAAajB,EAAKuB,eAnFxB,EAqFAR,YAAY,SAAAS,GAAG,OAAEpC,EAAOqC,IAAID,IArF5B,EAuFAP,aAAa,SAAAS,GAAM,OAAEA,EAAO,GAAP,WAAgBA,GAAWA,GApF/C,EAAK3B,MACL,CACCC,KAAK,sCACLC,YAAY,UACZM,UAAU,EAAKhB,MAAMgB,WAGtB,EAAKD,OAAO,EAAKA,OAAOqB,KAAZ,gBAVb,E,UAHkBC,IAAMC,WC2BVC,E,kDA1Bd,WAAYvC,GACX,IAAD,8BACC,cAAMA,IASPO,OAAO,WACN,IACOS,EAAW,EAAKR,MAAhBQ,UACP,OACC,qBAAKL,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,6BAEF,uBACA,cAAC,EAAD,CAAMK,UAAWA,UAfpB,EAAKR,MACL,CACCQ,WAAU,GALZ,E,UAHiBqB,IAAMC,W,MCAxBE,IAASjC,OACP,cAAC,EAAD,IACAkC,SAASC,eAAe,W","file":"static/js/main.8f347565.chunk.js","sourcesContent":["import React from 'react';\r\nimport './time.css';\r\nimport App from '../App';\r\n\r\nconst dayMap=new Map([[0,\"Sun\"],[1,\"Mon\"],[2,\"Tue\"],[3,\"Wed\"],[4,\"Thu\"],[5,\"Fri\"],[6,\"Sat\"]]);\r\n\r\nclass Time extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state=\r\n\t\t{\r\n\t\t\tdate:\"click button to turn on output time\",\r\n\t\t\ttext_button:\"turn on\",\r\n\t\t\tisRunning:this.props.isRunning\r\n\t\t};\r\n\r\n\t\tthis.output=this.output.bind(this);\r\n\t}\r\n\r\n\tcomponentWillMount=()=>\r\n\t{\r\n\t\tconsole.log(\"componentWillMount\");\r\n\t}\r\n\r\n\tcomponentDidMount=()=>\r\n\t{\r\n\t\tconsole.log(\"componentDidMount\");\r\n    }\r\n\r\n\tcomponentWillUpdate=()=>\r\n\t{\r\n\t\tconsole.log(\"componentWillUpdate\");\r\n\t}\r\n\r\n\tcomponentDidUpdate=()=>\r\n\t{\r\n\t\tconsole.log(\"componentDidUpdate\");\r\n\t}\r\n\r\n\trender=()=>\r\n\t{\r\n\t\tconst {date,text_button}=this.state;\r\n\t\tconsole.log(\"date:\"+date);\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div className=\"Time\">\r\n\t\t\t\t<header className=\"Time-header\">\r\n\t\t      \t\t<div id=\"time\">{date}</div>\r\n\t\t      \t\t<button type=\"button\" id=\"button\" onClick={this.output}>\r\n\t\t\t      \t\t{text_button}\r\n\t\t\t      \t</button>\r\n\t\t      \t</header>\r\n\t\t    </div>\r\n\t\t);\r\n\t}\r\n\r\n\toutput=()=>\r\n\t{\r\n\t\tif(!this.state.isRunning)\r\n\t\t{\r\n\t\t\tthis.interval=setInterval(()=>this.time(),1000);\r\n\t\t} \r\n\t\t\r\n\t\telse\r\n\t\t{\r\n\t\t\t\r\n\t\t\tclearInterval(this.interval);\r\n\t\t\tthis.setState(state=>(\r\n\t\t\t{\r\n\t\t\t\tdate:\"click button to turn on output time\",\r\n\t\t\t\ttext_button:\"turn on\",\r\n\t\t\t\tisRunning:!state.isRunning\r\n\t\t\t}));\t\r\n\t\t}\r\n\t}\r\n\r\n\ttime=()=>\r\n\t{\r\n\t\tthis.setState(\r\n\t\t{\r\n\t\t\tdate:this.dateToString(new Date()),\r\n\t\t\ttext_button:\"turn off\",\r\n\t\t\tisRunning:true\r\n\t\t});\r\n\t}\r\n\r\n\tdateToString=date=>\"current time:\"+this.dayToString(date.getDay())+\r\n\t\t\" \"+this.necessaryAdd(date.getDate())+\".\"+this.necessaryAdd(date.getMonth())+\".\"+date.getFullYear()\r\n\t\t+\" \"+this.necessaryAdd(date.getHours())+\":\"+this.necessaryAdd(date.getMinutes())+\":\"+\r\n\t\tthis.necessaryAdd(date.getSeconds());\r\n\r\n\tdayToString=day=>dayMap.get(day);\r\n\r\n\tnecessaryAdd=number=>number<10 ? `0${number}` : number;\r\n}\r\n\r\nexport default Time;","import './App.css';\nimport React from 'react';\nimport Time from './components/time';\n\n\nclass App extends React.Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\n\t\tthis.state=\n\t\t{\n\t\t\tisRunning:false\n\t\t};\n\n\t}\n\n\trender=()=>\n\t{\n\t\tconst {isRunning}=this.state;\n\t\treturn(\n\t\t\t<div className=\"App\">\n\t\t\t    <header className=\"App-header\">\n\t\t\t\t\tWelcome to site!\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<Time isRunning={isRunning}/>\n\t\t\t\t</header>\n\t    \t</div>\n    \t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n\t\t<App/>,\n\t\tdocument.getElementById('root')\n\t\t);"],"sourceRoot":""}